name: deploy

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    branches: ['alpha']

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - run: build

  build:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    # env:
    #   working-directory: .


    strategy:
      matrix:
        node-version: [18.13.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: create env file
        # working-directory: ${{ env.working-directory }}
        run: |
          pwd
          touch .env

          echo KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }} >> .env
          echo APP_ENV = ${{ secrets.KAKAO_REST_API_KEY }} >> .env
          echo PORT = ${{ secrets.KAKAO_REST_API_KEY }} >> .env

          cat .env

      # - name: zip file
      #   working-directory: ./
      #   run: zip -r taxiBackEnd.zip ./

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
      #     aws-region: us-east-1

      # - name: Upload to S3
      #   working-directory: ./
      #   run: aws s3 cp --region ap-northeast-2 ./taxiBackEnd.zip s3://taxi-backend/taxiBackend-deploy/

      # - name: deploy with AWS codeDeploy
      #   working-directory: ./
      #   run: aws deploy create-deployment
      #     --application-name new-product-nestjs-server-deploy
      #     --deployment-config-name CodeDeployDefault.OneAtATime
      #     --deployment-group-name new-product-nestjs-server-deploy-group
      #     --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},bundleType=zip,key=new-product-nestjs-server-deploy/newProductBackEnd.zip
